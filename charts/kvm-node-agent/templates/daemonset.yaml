apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "kvm-node-agent.fullname" . }}-controller-manager
  labels:
    control-plane: controller-manager
  {{- include "kvm-node-agent.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
    {{- include "kvm-node-agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        control-plane: controller-manager
      {{- include "kvm-node-agent.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      containers:
      - args: {{- toYaml .Values.controllerManager.manager.args | nindent 8 }}
        command:
        - /manager
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: PKI_PATH
          value: {{ quote .Values.controllerManager.manager.env.pkiPath }}
        - name: HOST_IP_ADDRESS
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: ISSUER_NAME
          value: {{ quote .Values.controllerManager.manager.env.issuerName }}
        - name: DISABLE_CREATE_CERT_MANAGER_CERTIFICATE
          value: {{ quote .Values.controllerManager.manager.env.disableCreateCertManagerCertificate
            }}
        - name: NODE_LABEL
          valueFrom:
            fieldRef:
              fieldPath: {{ .Values.controllerManager.manager.env.nodeLabelFieldPath }}
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.controllerManager.manager.image.repository }}:{{ .Values.controllerManager.manager.image.tag
          | default .Chart.AppVersion }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {{- toYaml .Values.controllerManager.manager.resources | nindent 10
          }}
        securityContext: {{- toYaml .Values.controllerManager.manager.containerSecurityContext
          | nindent 10 }}
        volumeMounts:
        - mountPath: /run/libvirt/libvirt-sock
          name: libvirt-sock
          readOnly: true
        - mountPath: /run/libvirt/libvirt-admin-sock
          name: libvirt-admin-sock
          readOnly: true
        - mountPath: /var/run/dbus/system_bus_socket
          name: systemd-sock
          readOnly: true
        - mountPath: /etc/os-release
          name: os-release
          readOnly: true
        - mountPath: /pki/CA
          name: pki-ca
        - mountPath: /pki/libvirt
          name: pki-libvirt
        - mountPath: /pki/qemu
          name: pki-qemu
      initContainers:
      - command:
        - sh
        - -c
        - cd /host/etc/pki && for i in CA libvirt qemu; do if [ -L ${i} ]; then rm ${i};
          fi; done && mkdir -p CA libvirt qemu && chown 42438:42438 CA libvirt qemu && chmod
          0755 CA libvirt qemu
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.controllerManager.createPkiDirs.image.repository }}:{{ .Values.controllerManager.createPkiDirs.image.tag
          | default .Chart.AppVersion }}
        name: create-pki-dirs
        resources: {}
        securityContext: {{- toYaml .Values.controllerManager.createPkiDirs.containerSecurityContext
          | nindent 10 }}
        volumeMounts:
        - mountPath: /host
          name: host
      nodeSelector: {{- toYaml .Values.controllerManager.nodeSelector | nindent 8 }}
      securityContext: {{- toYaml .Values.controllerManager.podSecurityContext | nindent
        8 }}
      serviceAccountName: {{ include "kvm-node-agent.fullname" . }}-controller-manager
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node.gardener.cloud/critical-components-not-ready
        operator: Exists
      volumes:
      - hostPath:
          path: /run/libvirt/libvirt-sock
          type: Socket
        name: libvirt-sock
      - hostPath:
          path: /run/libvirt/libvirt-admin-sock
          type: Socket
        name: libvirt-admin-sock
      - hostPath:
          path: /run/dbus/system_bus_socket
          type: Socket
        name: systemd-sock
      - hostPath:
          path: /etc/os-release
          type: File
        name: os-release
      - hostPath:
          path: /etc/pki/CA
          type: DirectoryOrCreate
        name: pki-ca
      - hostPath:
          path: /etc/pki/libvirt
          type: DirectoryOrCreate
        name: pki-libvirt
      - hostPath:
          path: /etc/pki/qemu
          type: DirectoryOrCreate
        name: pki-qemu
      - hostPath:
          path: /
        name: host
